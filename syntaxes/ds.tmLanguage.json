{
    "scopeName": "source.ds",
    "fileTypes": [
        ".ds"
    ],
    "name": "DialogueScripter",
    "patterns": [
        {
            "include": "#keywords"
        },
        {
            "include": "#import-paths"
        },
        {
            "include": "#label-names"
        },
        {
            "include": "#speaker-names"
        },
        {
            "include": "#tags"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#literals"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#call-functions"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.ds",
                    "match": "\\b(if|elif|else|not|and|or|call|import|label|jump|tour)\\b|->|-><|~"
                }
            ]
        },
        "import-paths": {
            "patterns": [
                {
                    "name": "string.unquoted.path.ds",
                    "match": "(?<=(import)\\s)[a-zA-Z0-9_./\\\\-]+"
                }
            ]
        },
        "label-names": {
            "patterns": [
                {
                    "name": "entity.name.label.ds",
                    "match": "(?<=(label|jump|tour)\\s)[a-zA-Z_][a-zA-Z0-9_]*"
                }
            ]
        },
        "speaker-names": {
            "patterns": [
                {
                    "name": "entity.name.speaker.ds",
                    "match": "^\\s*[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\")"
                }
            ]
        },
        "tags": {
            "patterns": [
                {
                    "name": "entity.name.tag.ds",
                    "match": "@[a-zA-Z_][a-zA-Z0-9_]*"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.ds",
                    "match": "(\\+|\\-|\\*|/|%|=|==|!=|<=|>=|\\+=|\\-=|\\*=|/=|%=|&&|\\|\\||!|<|>|:|\\(|\\)|\\{|\\}|,)"
                }
            ]
        },
        "call-functions": {
            "patterns": [
                {
                    "name": "entity.name.function.ds",
                    "match": "(?<=call\\s)[a-zA-Z_][a-zA-Z0-9_]*"
                }
            ]
        },
        "literals": {
            "patterns": [
                {
                    "name": "constant.language.boolean.ds",
                    "match": "\\b(true|false)\\b"
                },
                {
                    "name": "constant.numeric.ds",
                    "match": "-?\\d+(\\.\\d+)?"
                },
                {
                    "name": "variable.other.ds",
                    "match": "\\$([a-zA-Z_][a-zA-Z0-9_]*.)?[a-zA-Z_][a-zA-Z0-9_]*"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.ds",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.ds",
                            "match": "\\\\([btnfr'\"\\\\]|{{|}})"
                        },
                        {
                            "name": "meta.embedded.ds",
                            "begin": "\\{",
                            "end": "\\}",
                            "patterns": [
                                {
                                    "name": "string.quoted.double.embedded.ds",
                                    "begin": "\"",
                                    "end": "\""
                                },
                                {
                                    "name": "meta.function-call.ds",
                                    "begin": "\\b(call)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\(",
                                    "end": "\\)",
                                    "beginCaptures": {
                                        "1": {
                                            "name": "keyword.control.ds"
                                        },
                                        "2": {
                                            "name": "entity.name.function.embedded.ds"
                                        }
                                    },
                                    "patterns": [
                                        {
                                            "include": "#keywords"
                                        },
                                        {
                                            "include": "#operators"
                                        },
                                        {
                                            "include": "#literals"
                                        }
                                    ]
                                },
                                {
                                    "include": "#keywords"
                                },
                                {
                                    "include": "#operators"
                                },
                                {
                                    "include": "#literals"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.number-sign.ds",
                    "begin": "#",
                    "end": "$"
                }
            ]
        }
    }
}